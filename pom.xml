<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>eprtr</groupId>
    <artifactId>eprtr</artifactId>
    <version>2.0-SNAPSHOT</version>
    <name>eprtr</name>
    <url>http://eprtr.ec.europa.eu/</url>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <env>local</env>
        <java_version>1.7</java_version>
        <spring.version>4.1.4.RELEASE</spring.version>
        <tiles.version>3.0.1</tiles.version>
        <checkstyle.config.location>${basedir}/doc/checkstyle.xml</checkstyle.config.location>
        <liquibase.changeLogFile>database/changelog-master.xml</liquibase.changeLogFile>
        <!--
        <liquibase.changeLogFile>database/CMS.xml</liquibase.changeLogFile>
        -->
        <m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
    </properties>

    <!-- configuration of Maven repositories to be used -->

    <repositories>
        <repository>
            <id>eea</id>
            <name>EEA Release Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/internal</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- the build configuration -->

    <build>
        <plugins>

            <!-- Configure maven compiler -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <inherited>true</inherited>
                <configuration>
                    <verbose>false</verbose>
                    <fork>false</fork>
                    <compilerVersion>${java_version}</compilerVersion>
                    <source>${java_version}</source>
                    <target>${java_version}</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgument>-proc:none</compilerArgument>
                </configuration>
            </plugin>
            
            <!-- Configure annotation processor -->
            
            <plugin>   
			    <groupId>org.bsc.maven</groupId>   
			    <artifactId>maven-processor-plugin</artifactId>   
			    <version>2.0.5</version>
			    <executions>   
			        <execution>   
			            <id>process</id>   
			            <goals>   
			                <goal>process</goal>   
			            </goals>   
			            <phase>generate-sources</phase>
			        </execution>   
			    </executions>   
			    <dependencies>   
			        <dependency>   
			            <groupId>org.hibernate</groupId>   
			            <artifactId>hibernate-jpamodelgen</artifactId>   
			            <version>4.3.8.Final</version>   
			        </dependency>   
			    </dependencies>   
			</plugin>

            <!-- Configure Eclipse plugin -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <wtpversion>2.0</wtpversion>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <!-- Configure Surefire plugin (for executing unit tests) -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                	<redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
            </plugin>

            <!-- Configure WAR plugin (for building WAR application) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${basedir}/database</directory>
                            <targetPath>WEB-INF/classes/database</targetPath>
                            <includes>
                                <include>*.xml</include>
                                <include>*.content</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>


            <!-- Update database tables -->

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <propertyFile>target/classes/liquibase.properties</propertyFile>
                    <changeLogFile>${liquibase.changeLogFile}</changeLogFile>
                </configuration>
                <executions>
                    <execution>
                        <id>Update test database</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                            <propertyFile>target/test-classes/liquibase.properties</propertyFile>
                            <!-- <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase> -->
                        </configuration>
                        <goals>
                            <goal>dropAll</goal>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <formats>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <!-- <effort>Max</effort> -->
                    <threshold>Medium</threshold>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <linkXref>false</linkXref>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>300</minimumTokens>
                    <targetJdk>${java_version}</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.2.0.M0</version>
                <configuration>
                    <webApp>
                        <contextPath>/eprtr2</contextPath>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includes>**/*.js</includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                    Install node, npm and karma locally and execute the JS unit tests 
                    during the test lifecycle phase. 
            -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.22</version>
                <executions>

                    <!-- 1. Install node and npm locally -->
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v0.10.18</nodeVersion>
                            <npmVersion>1.3.8</npmVersion>
                        </configuration>
                    </execution>

                    <!-- 2. Install karma and karma plugins -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>
                    
                    <execution>
					    <id>bower install</id>
					    <goals>
					        <goal>bower</goal>
					    </goals>
					
					    <configuration>
					        <!-- optional: The default argument is actually
					        "install", so unless you need to run some other bower command,
					        you can remove this whole <configuration> section.
					        -->
					        <arguments>install</arguments>
					    </configuration>
					</execution>   

                    <!-- 3. Grunt -->
                    <execution>
    					<id>grunt build</id>
    					<goals>
        					<goal>grunt</goal>
    					</goals>
    					<configuration>
    						<!-- We dont want Eclipse to run grunt on every code change as we only want grunt to do wiredep -->
    						<srcdir>${basedir}/non-existing</srcdir>
    						<outputdir>${basedir}/src/main/webapp</outputdir>
  							<triggerfiles>
  								<triggerfile>bower.json</triggerfile>
    							<triggerfile>Gruntfile.js</triggerfile>
    							<triggerfile>package.json</triggerfile>
  							</triggerfiles>
					    </configuration>
					</execution>

                    <!-- 4. Run karma tests -->
                    <execution>
                        <id>javascript tests</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>karma</goal>
                        </goals>
                        <configuration>
                            <karmaConfPath>karma.ci.conf.js</karmaConfPath>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>


        <!-- filters for src/main/resources and src/test/resources -->

        <!--
        <filters>
            <filter>${env}.properties</filter>
        </filters>
        -->

        <!-- resources for the main code -->

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>log4j.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.xml</include>
                    <include>*.ttf</include>
                </includes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <excludes>
                    <exclude>*.properties</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </testResource>
        </testResources>

        <!-- name of the bundled project when it is finally built -->
        <finalName>eprtr</finalName>

        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									com.github.eirslett
        								</groupId>
        								<artifactId>
        									frontend-maven-plugin
        								</artifactId>
        								<versionRange>
        									[0.0.22,)
        								</versionRange>
        								<goals>
        									<goal>karma</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.apache.maven.plugins
        								</groupId>
        								<artifactId>
        									maven-dependency-plugin
        								</artifactId>
        								<versionRange>
        									[2.8,)
        								</versionRange>
        								<goals>
        									<goal>
        										unpack-dependencies
        									</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>org.liquibase</groupId>
        								<artifactId>
        									liquibase-maven-plugin
        								</artifactId>
        								<versionRange>
        									[3.3.1,)
        								</versionRange>
        								<goals>
        									<goal>update</goal>
        									<goal>dropAll</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>

    <!-- dependencies -->

    <dependencies>
    
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-entitymanager</artifactId>
		    <version>4.3.8.Final</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>xml-apis</groupId>
		    		<artifactId>xml-apis</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-ehcache</artifactId>
		    <version>4.3.8.Final</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>xml-apis</groupId>
		    		<artifactId>xml-apis</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
    
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.13</version>
        </dependency>
        <!-- jackson 2 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.1.0</version>
        </dependency>

        <!-- Spring 4 (Requires Tomcat 7) -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- SQL Server -->
        <dependency>
            <groupId>net.sourceforge.jtds</groupId>
            <artifactId>jtds</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.172</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>3.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>angularjs</artifactId>
            <version>1.2.16</version>
        </dependency>

        <!-- TEST dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Unitils -->
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-core</artifactId>
            <version>3.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-dbunit</artifactId>
            <version>3.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-spring</artifactId>
            <version>3.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-all</artifactId>
		    <version>1.10.19</version>
		    <scope>test</scope>
		</dependency>
        <!-- End TEST dependencies -->

    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <configLocation>${checkstyle.config.location}</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
