<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
  <!--
     You can run this change log on your database as many times as you want, it will ignore the
     changes that are already applied. It also means that you can't modify an existing revision.
     Always add to the end.

     Use the maven goals: liquibase:update and liquibase:status
      Potentially with -Dliquibase.dropFirst=true
 -->

  <!--
       These views are installed on the EPRTRMaster database.
 -->

  <changeSet author="roug" id="rev-1" dbms="mssql">
    <createView viewName="RDF_ACTIVITY">
SELECT a.ActivityID
    ,a.FacilityReportID AS inReport
    ,aia.Code AS annexIActivity
    ,aia.IPPCCode AS AnnexIActivityIPPCCode
    ,a.RankingNumeric
    ,a.MainActivityIndicator
    ,aia.Code + ' - ' + aia.Name + 
    CASE a.MainActivityIndicator
        WHEN 1 THEN ' (main)'
        ELSE ''
    END AS 'rdfs:label' 
FROM dbo.ACTIVITY AS a INNER JOIN
    dbo.FACILITYREPORT AS fr ON fr.FacilityReportID = a.FacilityReportID INNER JOIN
    dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr ON 
    prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID 
LEFT OUTER JOIN
    dbo.LOV_ANNEXIACTIVITY AS aia ON a.LOV_AnnexIActivityID = aia.LOV_AnnexIActivityID
    </createView>

    <createView viewName="RDF_ANNEXIACTIVITY">
SELECT a1.Code AS ID
    ,a1.Code
    ,a1.Name
    ,a1.StartYear
    ,a1.EndYear
    ,a2.Code AS parentANNEXIActivity
    ,a1.IPPCCode
    ,a1.Code + ' - ' + a1.Name AS 'rdfs:label'
FROM dbo.LOV_ANNEXIACTIVITY a1
LEFT JOIN dbo.LOV_ANNEXIACTIVITY AS a2
    ON a1.ParentID = a2.LOV_AnnexIActivityID
    </createView>

    <createView viewName="RDF_AREAGROUP">
SELECT Code AS ID
    ,Code
    ,Name
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_AREAGROUP
    </createView>

    <createView viewName="RDF_COMPETENTAUTHORITY">
SELECT ca.CompetentAuthorityPartyID
    ,country.Code AS inCountry
    ,ca.ReportingYear
    ,ca.Name
    ,ca.Name AS 'rdfs:label'
    ,address.StreetName AS Address_StreetName
    ,address.BuildingNumber AS Address_BuildingNumber
    ,address.City AS Address_City
    ,address.PostalCode AS Address_PostalCode
    ,ca.TelephoneCommunication
    ,ca.FaxCommunication
    ,ca.EmailCommunication
    ,ca.ContactPersonName
FROM dbo.COMPETENTAUTHORITYPARTY ca
LEFT JOIN dbo.LOV_COUNTRY AS country
    ON ca.LOV_CountryID = country.LOV_CountryID
LEFT JOIN dbo.ADDRESS AS address
    ON ca.AddressID = address.AddressID
    </createView>

    <createView viewName="RDF_CONFIDENTIALITY">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_CONFIDENTIALITY
    </createView>

    <createView viewName="RDF_COORDINATESYSTEM">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_COORDINATESYSTEM
    </createView>

    <createView viewName="RDF_COUNTRY">
SELECT Code as ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_COUNTRY
    </createView>

    <createView viewName="RDF_FACILITY">
WITH SUB_QUERY AS 
(
SELECT f.FacilityID
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND fr.FacilityName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE fr.FacilityName
        END AS FacilityName
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND f_address.StreetName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE f_address.StreetName
        END AS StreetName
    ,f_address.BuildingNumber
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND f_address.City IS NULL
            THEN 'CONFIDENTIAL'
        ELSE f_address.City
        END AS City
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND f_address.PostalCode IS NULL
            THEN 'CONFIDENTIAL'
        ELSE f_address.PostalCode
        END AS PostalCode
    ,country.Code AS inCountry
    ,fr.ConfidentialIndicator
    ,ROW_NUMBER() OVER (PARTITION BY f.FacilityID ORDER BY prtr.ReportingYear DESC,prtr.Published DESC) dest_rank
    ,fr.FacilityReportID
    ,CASE 
        WHEN fr.GeographicalCoordinate.STY = 0 
            THEN NULL
        ELSE fr.GeographicalCoordinate.STY
        END AS ""geo:lat""
    ,CASE 
        WHEN fr.GeographicalCoordinate.STX = 0 
            THEN NULL
        ELSE fr.GeographicalCoordinate.STX
        END AS ""geo:long"" 
FROM dbo.Facility f
LEFT JOIN dbo.FacilityReport fr ON
    f.FacilityID = fr.FacilityID
LEFT JOIN dbo.ADDRESS AS f_address
    ON fr.AddressID = f_address.AddressID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.LOV_COUNTRY AS country
    ON prtr.LOV_CountryID = country.LOV_CountryID
)
SELECT
    FacilityID AS ID,
    FacilityID AS facilityID,
    FacilityName,
    StreetName,
    BuildingNumber,
    City,
    PostalCode,
    inCountry,
    ConfidentialIndicator,
    FacilityReportID AS latestReport,
    ""geo:lat"",
    ""geo:long""
FROM SUB_QUERY
WHERE dest_rank=1
    </createView>

    <createView viewName="RDF_FACILITYID_CHANGES_TURURU">
SELECT        fr.FacilityReportID, fr.FacilityReportID AS facilityReport, l.Code AS inCountry, prtr.ReportingYear, fr.NationalID, fr.FacilityID AS newFacility, CASE WHEN isnull(fl.OldFacilityID, 0) 
                         = 0 THEN fr.FacilityID ELSE fl.OldFacilityID END AS oldFacility
FROM            dbo.PUBLISH_FACILITYREPORT AS pf INNER JOIN
                         dbo.FACILITYREPORT AS fr ON fr.FacilityReportID = pf.FacilityReportID INNER JOIN
                         dbo.POLLUTANTRELEASEANDTRANSFERREPORT AS prtr ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID INNER JOIN
                         dbo.LOV_COUNTRY AS l ON l.LOV_CountryID = prtr.LOV_CountryID LEFT OUTER JOIN
                             (SELECT        NationalID, MIN(FacilityID) AS OldFacilityID
                               FROM            dbo.FACILITYLOG
                               GROUP BY NationalID) AS fl ON fl.NationalID = fr.NationalID
    </createView>

    <createView viewName="RDF_FACILITYID_CHANGES">
SELECT fr.FacilityReportID 
    ,fr.FacilityReportID AS facilityReport
    ,l.Code AS inCountry
    ,prtr.ReportingYear
    ,fr.NationalID
    ,fr.FacilityID AS newFacility
    ,CASE 
        WHEN isnull(fl.OldFacilityID, 0) = 0
            THEN fr.FacilityID
        ELSE fl.OldFacilityID
        END AS oldFacility
FROM dbo.PUBLISH_FACILITYREPORT AS pf
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = pf.FacilityReportID
INNER JOIN dbo.POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
INNER JOIN dbo.LOV_COUNTRY AS l
    ON l.LOV_CountryID = prtr.LOV_CountryID
LEFT JOIN dbo.FACILITYLOG AS fl
    ON fl.FacilityReportID NOT IN (
            SELECT FacilityReportID
            FROM dbo.FACILITYLOG
            GROUP BY FacilityReportID
            HAVING (COUNT(*) > 1)
            )
        AND fl.FacilityReportID = fr.FacilityReportID
    </createView>

    <createView viewName="RDF_FACILITYREPORT">
SELECT fr.FacilityReportID
    ,fr.FacilityID as forFacility
    ,fr.NationalID
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND fr.ParentCompanyName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE fr.ParentCompanyName
        END AS ParentCompanyName
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND fr.FacilityName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE fr.FacilityName
        END AS FacilityName
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND f_address.StreetName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE f_address.StreetName
        END AS StreetName
    ,f_address.BuildingNumber
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND f_address.City IS NULL
            THEN 'CONFIDENTIAL'
        ELSE f_address.City
        END AS City
    ,CASE 
        WHEN ConfidentialIndicator = 1
            AND f_address.PostalCode IS NULL
            THEN 'CONFIDENTIAL'
        ELSE f_address.PostalCode
        END AS PostalCode
    ,prtr.ReportingYear
    ,prtr.CdrReleased
    ,prtr.Published
    ,f_country.Code AS inCountry
    ,CASE 
        WHEN fr.GeographicalCoordinate.STY = 0 
            THEN NULL
        ELSE fr.GeographicalCoordinate.STY
        END AS "geo:lat"
    ,CASE 
        WHEN fr.GeographicalCoordinate.STX = 0 
            THEN NULL
        ELSE fr.GeographicalCoordinate.STX
        END AS "geo:long"
    ,rbd.Code AS forRBD
    ,nuts.Code AS forNUTS
    ,nace.Code as nACEActivity
    ,fr.CompetentAuthorityPartyID as competentAuthority
    ,CASE 
        WHEN fr.ProtectVoluntaryData = 0
            THEN pvol.ProductName
        END AS ProductionVolumeProductName
    ,CASE 
        WHEN fr.ProtectVoluntaryData = 0
            THEN pvol.Quantity
        END AS ProductionVolumeQuantity
    ,CASE 
        WHEN fr.ProtectVoluntaryData = 0
            THEN unit.Code
        END AS ProductionVolumeUnitCode
    ,CASE 
        WHEN fr.ProtectVoluntaryData = 0
            THEN fr.TotalIPPCInstallationQuantity
        END AS TotalIPPCInstallationQuantity
    ,CASE 
        WHEN fr.ProtectVoluntaryData = 0
            THEN fr.OperatingHours
        END AS OperatingHours
    ,CASE 
        WHEN fr.ProtectVoluntaryData = 0
            THEN fr.TotalEmployeeQuantity
        END AS TotalEmployeeQuantity
    ,fr.WebsiteCommunication
    ,fr.PublicInformation
    ,fr.ConfidentialIndicator
    ,conf.Code AS confidentiality
    ,fr.ProtectVoluntaryData
    ,aXact.SectorCode as annexIActivity
    ,CASE 
        WHEN ConfidentialIndicator = 1
            OR fr.FacilityName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE fr.FacilityName
        END 
        + ' for year ' + CAST(prtr.ReportingYear AS NVARCHAR(4)) AS 'rdfs:label'
FROM dbo.FACILITYREPORT AS fr
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.ADDRESS AS f_address
    ON fr.AddressID = f_address.AddressID
LEFT JOIN dbo.LOV_COUNTRY AS f_country
    ON prtr.LOV_CountryID = f_country.LOV_CountryID
LEFT JOIN dbo.PRODUCTIONVOLUME AS pvol
    ON fr.ProductionVolumeID = pvol.ProductionVolumeID
LEFT JOIN dbo.LOV_UNIT AS unit
    ON pvol.LOV_UnitID = unit.LOV_UnitID
LEFT JOIN dbo.LOV_CONFIDENTIALITY AS conf
    ON fr.LOV_ConfidentialityID = conf.LOV_ConfidentialityID
LEFT JOIN dbo.ACTIVITY AS act
    ON fr.FacilityReportID = act.FacilityReportID
        AND act.MainActivityIndicator = 1
LEFT JOIN dbo.vAT_ANNEXIACTIVITY AS aXact
    ON aXact.LOV_AnnexIActivityID = act.LOV_AnnexIActivityID
LEFT JOIN dbo.LOV_RiverBasinDistrict AS rbd
    ON fr.LOV_RiverBasinDistrictID = rbd.LOV_RiverBasinDistrictID
LEFT JOIN dbo.LOV_NUTSRegion AS nuts
    ON fr.LOV_NUTSRegionID = nuts.LOV_NUTSRegionID  
LEFT JOIN dbo.LOV_NACEActivity nace
    ON fr.LOV_NACEMainEconomicActivityID = nace.LOV_NACEActivityID
    </createView>

    <createView viewName="RDF_MEDIUM">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_MEDIUM
    </createView>

    <createView viewName="RDF_METHODBASIS">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_METHODBASIS
    </createView>

    <createView viewName="RDF_METHODTYPE">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_METHODTYPE
    </createView>

    <createView viewName="RDF_NACEActivity">
SELECT n1.Code as ID
    ,n1.Code
    ,RTRIM(LTRIM(n1.Name)) AS Name
    ,n1.StartYear
    ,n1.EndYear
    ,n2.Code AS parentNACEActivity
    ,n1.Section
    ,n1.SubSection
    ,n1.Code + ' - ' + RTRIM(LTRIM(n1.Name)) AS 'rdfs:label'
FROM dbo.LOV_NACEActivity n1
LEFT JOIN dbo.LOV_NACEActivity AS n2
    ON n1.ParentID = n2.LOV_NACEActivityID
    </createView>

    <createView viewName="RDF_NUTSREGION">
SELECT nuts1.Code AS ID
    ,nuts1.Code
    ,RTRIM(LTRIM(nuts1.Name)) as Name
    ,nuts1.StartYear
    ,nuts1.EndYear
    ,nuts2.Code AS parentNUTSRegion
    ,country.Code AS inCountry
    ,nuts1.Code + ' - ' + RTRIM(LTRIM(nuts1.Name)) AS 'rdfs:label'
  FROM dbo.LOV_NUTSREGION nuts1
LEFT JOIN dbo.LOV_COUNTRY AS country
    ON nuts1.LOV_CountryID = country.LOV_CountryID
LEFT JOIN dbo.LOV_NUTSREGION nuts2
    ON nuts1.ParentID = nuts2.LOV_NUTSRegionID
    </createView>

    <createView viewName="RDF_POLLUTANT">
SELECT p1.Code AS ID
    ,p1.Code
    ,p1.Name
    ,p1.StartYear
    ,p1.EndYear
    ,p2.Code AS parentPollutant
    ,p1.CAS
    ,p1.CodeEPER
    ,p1.Code + ' - ' + p1.Name AS 'rdfs:label'
FROM dbo.LOV_Pollutant p1
LEFT JOIN dbo.LOV_Pollutant p2
    ON p1.ParentID = p2.LOV_PollutantID
    </createView>

    <createView viewName="RDF_POLLUTANTRELEASE">
SELECT pr.PollutantReleaseID
    ,pr.FacilityReportID AS facilityReport
    ,medium.Code AS forMedium
    ,pollutant.Code AS forPollutant
    ,mb.Code AS forMethod
    ,pr.TotalQuantity
    ,pr.AccidentalQuantity
    ,tot_unit.Code as unit
    ,pr.ConfidentialIndicator
    ,conf.Code AS confidentiality
    ,pollutant.Code + ', ' + medium.Code AS 'rdfs:label'
FROM dbo.vAT_POLLUTANTRELEASE AS pr
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = pr.FacilityReportID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.LOV_UNIT AS tot_unit
    ON pr.LOV_TotalQuantityUnitID = tot_unit.LOV_UnitID
LEFT JOIN dbo.LOV_CONFIDENTIALITY AS conf
    ON pr.LOV_ConfidentialityID = conf.LOV_ConfidentialityID
LEFT JOIN dbo.LOV_Pollutant AS pollutant
    ON pr.LOV_PollutantID = pollutant.LOV_PollutantID
LEFT JOIN dbo.LOV_MEDIUM AS medium
    ON pr.LOV_MediumID = medium.LOV_MediumID
LEFT JOIN dbo.LOV_METHODBASIS AS mb
    ON pr.LOV_MethodBasisID = mb.LOV_MethodBasisID
    </createView>

    <createView viewName="RDF_POLLUTANTRELEASEMETHODUSED">
SELECT pr.MethodListID AS PollutantReleaseMethodUsedID
    ,pr.PollutantReleaseID AS forPollutantRelease
    ,mt.Code AS methodType
    ,mu.MethodDesignation
    ,mt.Code + COALESCE(' ' + mu.MethodDesignation,'') AS 'rdfs:label'
FROM dbo.POLLUTANTRELEASE AS pr
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = pr.FacilityReportID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.METHODUSED AS mu
    ON pr.MethodListID = mu.MethodListID
LEFT JOIN dbo.LOV_METHODTYPE AS mt
    ON mu.LOV_MethodTypeID = mt.LOV_MethodTypeID
WHERE (pr.MethodListID IS NOT NULL)
    </createView>

    <createView viewName="RDF_POLLUTANTTRANSFER">
SELECT pt.PollutantTransferID
    ,pt.FacilityReportID as facilityReport
    ,pollutant.Code as forPollutant
    ,mb.Code as forMethod
    ,pt.Quantity
    ,unit.Code as unit
    ,pt.ConfidentialIndicator
    ,conf.Code AS confidentiality
    ,pollutant.Code AS 'rdfs:label'
FROM dbo.vAT_POLLUTANTTRANSFER AS pt
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = pt.FacilityReportID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.LOV_UNIT AS unit
    ON pt.LOV_QuantityUnitID = unit.LOV_UnitID
LEFT JOIN dbo.LOV_CONFIDENTIALITY AS conf
    ON pt.LOV_ConfidentialityID = conf.LOV_ConfidentialityID
LEFT JOIN dbo.LOV_Pollutant AS pollutant
    ON pt.LOV_PollutantID = pollutant.LOV_PollutantID
LEFT JOIN dbo.LOV_METHODBASIS AS mb
    ON pt.LOV_MethodBasisID = mb.LOV_MethodBasisID  
    </createView>

    <createView viewName="RDF_POLLUTANTTRANSFERMETHODUSED">
SELECT pt.MethodListID AS PollutantTransferMethodUsedID
    ,pt.PollutantTransferID AS forPollutantTransfer
    ,mt.Code AS methodType
    ,mu.MethodDesignation
    ,mt.Code + COALESCE(' ' + mu.MethodDesignation,'') AS 'rdfs:label'
FROM dbo.POLLUTANTTRANSFER AS pt
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = pt.FacilityReportID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.METHODUSED AS mu
    ON pt.MethodListID = mu.MethodListID
LEFT JOIN dbo.LOV_METHODTYPE AS mt
    ON mu.LOV_MethodTypeID = mt.LOV_MethodTypeID
WHERE (pt.MethodListID IS NOT NULL)
    </createView>

    <createView viewName="RDF_RIVERBASINDISTRICT">
SELECT rbd.Code AS ID
    ,rbd.Code
    ,rbd.Name
    ,rbd.StartYear
    ,rbd.EndYear
    ,country.Code AS inCountry
    ,rbd.Code + ' - ' + rbd.Name AS 'rdfs:label'
FROM dbo.LOV_RIVERBASINDISTRICT rbd
LEFT JOIN dbo.LOV_COUNTRY AS country
    ON rbd.LOV_CountryID = country.LOV_CountryID
    </createView>

    <createView viewName="RDF_STATUS">
SELECT LOV_StatusID
    ,TableName
    ,Code
    ,Description
    ,Code + ' - ' + TableName AS 'rdfs:label'
FROM dbo.LOV_Status
    </createView>

    <createView viewName="RDF_UNIT">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_Unit
    </createView>

    <createView viewName="RDF_UPLOADEDREPORTS">
SELECT p.PollutantReleaseAndTransferReportID
    ,l.Code as inCountry
    ,p.ReportingYear
    ,CASE 
        WHEN isnull(v.PollutantReleaseAndTransferReportID, 0) > 0
            THEN 1
        ELSE 0
        END AS CurrentlyShown
    ,p.RemarkText
    ,p.CdrUrl
    ,p.CdrUploaded
    ,p.CdrReleased
    ,p.ForReview
    ,p.Published
    ,p.ResubmitReason
    ,p.Imported AS ImportedToEPRTRMaster
FROM dbo.POLLUTANTRELEASEANDTRANSFERREPORT AS p
INNER JOIN dbo.LOV_COUNTRY AS l
    ON p.LOV_CountryID = l.LOV_CountryID
LEFT JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS v
    ON v.PollutantReleaseAndTransferReportID = p.PollutantReleaseAndTransferReportID
WHERE (p.CdrReleased > '2000-01-01 00:00:00.000')
    </createView>

    <createView viewName="RDF_WASTETRANSFER">
SELECT wt.WasteTransferID
    ,wt.FacilityReportID AS facilityReport
    ,wastetype.Code AS forWasteType
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND wtreatment.Code IS NULL
            THEN 'CONFIDENTIAL'
        ELSE wtreatment.Code
        END AS WasteTreatmentCode
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND wtreatment.NAME IS NULL
            THEN 'CONFIDENTIAL'
        ELSE wtreatment.NAME
        END AS WasteTreatmentName
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND mb.Code IS NULL
            THEN 'CONFIDENTIAL'
        ELSE mb.Code
        END AS forMethod
    ,wt.Quantity
    ,unit.Code as unit
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whp.NAME IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whp.NAME
        END AS WasteHandlerPartyName
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpa.StreetName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpa.StreetName
        END AS WasteHandlerPartyAddressStreetName
    ,whpa.BuildingNumber AS WasteHandlerPartyAddressBuildingNumber
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpa.City IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpa.City
        END AS WasteHandlerPartyAddressCity
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpa.PostalCode IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpa.PostalCode
        END AS WasteHandlerPartyAddressPostalCode
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpa_country.Code IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpa_country.Code
        END AS WasteHandlerPartyAddressCountryCode
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpa_country.NAME IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpa_country.NAME
        END AS WasteHandlerPartyAddressCountryName
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpsa.StreetName IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpsa.StreetName
        END AS WasteHandlerPartySiteAddressStreetName
    ,whpsa.BuildingNumber AS WasteHandlerPartySiteAddressBuildingNumber
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpsa.City IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpsa.City
        END AS WasteHandlerPartySiteAddressCity
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpsa.PostalCode IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpsa.PostalCode
        END AS WasteHandlerPartySiteAddressPostalCode
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpsa_country.Code IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpsa_country.Code
        END AS WasteHandlerPartySiteAddressCountryCode
    ,CASE 
        WHEN wt.ConfidentialIndicator = 1
            AND whpsa_country.NAME IS NULL
            THEN 'CONFIDENTIAL'
        ELSE whpsa_country.NAME
        END AS WasteHandlerPartySiteAddressCountryName
    ,wt.ConfidentialIndicator
    ,conf.Code AS confidentiality
    ,wastetype.Code + ', ' + wtreatment.Code AS 'rdfs:label'
FROM dbo.vAT_WASTETRANSFER AS wt
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = wt.FacilityReportID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.LOV_WASTETREATMENT AS wtreatment
    ON wt.LOV_WasteTreatmentID = wtreatment.LOV_WasteTreatmentID
LEFT JOIN dbo.LOV_METHODBASIS AS mb
    ON wt.LOV_MethodBasisID = mb.LOV_MethodBasisID
LEFT JOIN dbo.LOV_UNIT AS unit
    ON wt.LOV_QuantityUnitID = unit.LOV_UnitID
LEFT JOIN dbo.WASTEHANDLERPARTY AS whp
    ON wt.WasteHandlerPartyID = whp.WasteHandlerPartyID
LEFT JOIN dbo.ADDRESS AS whpa
    ON whp.AddressID = whpa.AddressID
LEFT JOIN dbo.LOV_COUNTRY AS whpa_country
    ON whpa.LOV_CountryID = whpa_country.LOV_CountryID
LEFT JOIN dbo.ADDRESS AS whpsa
    ON whp.SiteAddressID = whpsa.AddressID
LEFT JOIN dbo.LOV_COUNTRY AS whpsa_country
    ON whpsa.LOV_CountryID = whpsa_country.LOV_CountryID
LEFT JOIN dbo.LOV_CONFIDENTIALITY AS conf
    ON wt.LOV_ConfidentialityID = conf.LOV_ConfidentialityID
LEFT JOIN dbo.LOV_WasteType AS wastetype
    ON wt.LOV_WasteTypeID = wastetype.LOV_WasteTypeID
    </createView>

    <createView viewName="RDF_WASTETRANSFERMETHODUSED">
SELECT wt.MethodListID AS WasteTransferMethodUsedID
    ,wt.WasteTransferID AS forWasteTransfer
    ,mt.Code AS forMethod
    ,mu.MethodDesignation
    ,mt.Code + COALESCE(' ' + mu.MethodDesignation,'') AS 'rdfs:label'
FROM dbo.WASTETRANSFER AS wt
INNER JOIN dbo.FACILITYREPORT AS fr
    ON fr.FacilityReportID = wt.FacilityReportID
INNER JOIN dbo.vAT_POLLUTANTRELEASEANDTRANSFERREPORT AS prtr
    ON prtr.PollutantReleaseAndTransferReportID = fr.PollutantReleaseAndTransferReportID
LEFT JOIN dbo.METHODUSED AS mu
    ON wt.MethodListID = mu.MethodListID
LEFT JOIN dbo.LOV_METHODTYPE AS mt
    ON mu.LOV_MethodTypeID = mt.LOV_MethodTypeID
WHERE (wt.MethodListID IS NOT NULL)
    </createView>

    <createView viewName="RDF_WASTETREATMENT">
SELECT Code AS ID
    ,Code
    ,Name
    ,StartYear
    ,EndYear
    ,Code + ' - ' + Name AS 'rdfs:label'
FROM dbo.LOV_WasteTreatment
    </createView>

    <createView viewName="RDF_WASTETYPE">
SELECT wt1.Code AS ID
    ,wt1.Code
    ,wt1.Name
    ,wt1.StartYear
    ,wt1.EndYear
    ,wt2.Code AS parentType
    ,wt1.Code + ' - ' + wt1.Name AS 'rdfs:label'
FROM dbo.LOV_WasteType wt1
LEFT JOIN dbo.LOV_WasteType wt2
    ON wt1.ParentID = wt2.LOV_WasteTypeID
    </createView>
  </changeSet>

</databaseChangeLog>
